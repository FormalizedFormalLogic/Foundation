name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # We don't use https://github.com/leanprover/lean-action.
      # The reason is that caching timing is early, it won't be work for generating kites.
      - name: Install elan
        run: |
          curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y --default-toolchain none
          echo "$HOME/.elan/bin" >> "$GITHUB_PATH"
          "$HOME"/.elan/bin/lean --version
          "$HOME"/.elan/bin/lake --version

      # Build project
      - name: Restore project cache
        id: project-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: .lake
          key: lake-${{ runner.os }}-${{ hashFiles('lean-toolchain') }}-${{ hashFiles('lake-manifest.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ hashFiles('lean-toolchain') }}-${{ hashFiles('lake-manifest.json') }}
      - name: Build project
        run: lake build --keep-toolchain

      # Build import-graph
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Generate import graph
        run: |
          lake exe graph ./import_graph.png
          lake exe graph ./import_graph.pdf
          lake exe graph ./import_graph.html
      - name: Copy import graph to pages
        run: |
          cp ./import_graph.png ./pages/src/assets
          cp ./import_graph.pdf ./pages/src/assets
          cp ./import_graph.html ./pages/src/assets

      # Build kites
      - uses: typst-community/setup-typst@v4
      - name: Generate kites
        run: |
          lake exe generate_modal_kite
      - name: Copy kites to pages
        run: |
          cp ./scripts/modal_kite.png ./pages/src/assets

      # Save cache
      - name: Save project cache
        id: project-cache-save
        uses: actions/cache/save@v4
        with:
          path: .lake
          key: ${{ steps.project-cache-restore.outputs.cache-primary-key }}

      # Build doc
      - name: Restore docbuild cache
        id: docbuild-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: docbuild/.lake
          key: docbuild-lake-${{ runner.os }}-${{ hashFiles('lean-toolchain') }}-${{ hashFiles('lake-manifest.json') }}-${{ github.sha }}
          restore-keys: |
            docbuild-${{ runner.os }}-${{ hashFiles('lean-toolchain') }}-${{ hashFiles('lake-manifest.json') }}
      - name: Build docbuild
        working-directory: docbuild
        run: lake build --keep-toolchain Foundation:docs
      - name: Save docbuild cache
        id: docbuild-cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            docbuild/.lake
          key: ${{ steps.docbuild-cache-restore.outputs.cache-primary-key }}
      - name: Copy docbuild to pages
        working-directory: docbuild
        run: cp -r .lake/build/doc ../pages/doc

      # Build book
      - name: Install mdbook
        uses: baptiste0928/cargo-install@v3
        with:
          crate: mdbook
          version: "0.4.40"
      - name: Build book
        run: mdbook build
        working-directory: pages

      - uses: actions/upload-pages-artifact@v3
        with:
          path: pages/_output

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
