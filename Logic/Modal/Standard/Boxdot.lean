import Logic.Modal.Standard.Deduction

namespace LO.Modal.Standard

variable [DecidableEq ╬▒]

def Formula.BoxdotTranslation : Formula ╬▒ Рєњ Formula ╬▒
  | atom p => .atom p
  | РіЦ => РіЦ
  | p РЪХ q => (BoxdotTranslation p) РЪХ (BoxdotTranslation q)
  | РќАp => РіА(BoxdotTranslation p)
postfix:90 "рхЄ" => Formula.BoxdotTranslation

namespace Formula.BoxdotTranslation

variable {p q : Formula ╬▒}

lemma top_def : (Ріц : Formula ╬▒)рхЄ = Ріц := by rfl;

lemma box_def : (РќАp)рхЄ = РіА(pрхЄ) := by rfl;

lemma imp_def : (p РЪХ q)рхЄ = (pрхЄ РЪХ qрхЄ) := by rfl;

lemma neg_def : (~p)рхЄ = ~(pрхЄ) := by rfl;

lemma and_def : (p РІЈ q)рхЄ = (pрхЄ РІЈ qрхЄ) := by rfl;

lemma or_def : (p РІј q)рхЄ = (pрхЄ РІј qрхЄ) := by rfl;

lemma iff_def : (p РЪи q)рхЄ = (pрхЄ РЪи qрхЄ) := by rfl;

lemma axiomK : (Axioms.K p q)рхЄ = РіА(pрхЄ РЪХ qрхЄ) РЪХ РіА(pрхЄ) РЪХ РіА(qрхЄ) := by rfl;

lemma axiomT : (Axioms.T p)рхЄ = РіА(pрхЄ) РЪХ pрхЄ := by rfl;

lemma axiomFour : (Axioms.Four p)рхЄ = РіА(pрхЄ) РЪХ РіАРіА(pрхЄ) := by rfl;

lemma axiomL : (Axioms.L p)рхЄ = РіА(РіАpрхЄ РЪХ pрхЄ) РЪХ РіАpрхЄ := by rfl;

lemma axiomGrz : (Axioms.Grz p)рхЄ =  РіА(РіА(pрхЄ РЪХ РіАpрхЄ) РЪХ pрхЄ) РЪХ pрхЄ := by rfl;

end Formula.BoxdotTranslation

open System
open Formula

variable {p : Formula ╬▒}

theorem boxdotTranslated
  {╬ЏРѓЂ ╬ЏРѓѓ : DeductionParameter ╬▒} [╬ЏРѓЂ.IsNormal] [╬ЏРѓѓ.IsNormal]
  (h : Рѕђ p Рѕѕ Ax(╬ЏРѓЂ), ╬ЏРѓѓ Ріб! pрхЄ) : ╬ЏРѓЂ Ріб! p Рєњ ╬ЏРѓѓ Ріб! pрхЄ := by
  intro d;
  induction d using Deduction.inducition_with_necOnly! with
  | hMaxm hs => exact h _ hs;
  | hNec ihp =>
    dsimp [BoxdotTranslation];
    exact boxdot_nec! $ ihp;
  | hMdp ihpq ihp =>
    simp only [BoxdotTranslation.imp_def] at ihpq;
    exact ihpq Ређ ihp;
  | _ =>
    simp only [BoxdotTranslation.imp_def, BoxdotTranslation.neg_def, BoxdotTranslation.top_def, BoxdotTranslation.iff_def];
    trivial;

lemma boxdotTranslatedK4_of_S4 : ­Юљњ­ЮЪњ Ріб! p Рєњ ­Юљі­ЮЪњ Ріб! pрхЄ := boxdotTranslated $ by
  intro p hp;
  rcases hp with (РЪе_, _, rflРЪЕ | РЪе_, rflРЪЕ | РЪе_, rflРЪЕ);
  . simp only [BoxdotTranslation.axiomK, boxdot_axiomK!];
  . simp only [BoxdotTranslation.axiomT, boxdot_axiomT!];
  . simp only [BoxdotTranslation.axiomFour, boxdot_axiomFour!];

lemma iff_boxdotTranslation_S4 : ­Юљњ­ЮЪњ Ріб! p РЪи pрхЄ := by
  induction p using Formula.rec' with
  | hbox p ihp => exact iff_trans''! (box_iff! ihp) iff_box_boxdot!;
  | himp p q ihp ihq => exact imp_replace_iff! ihp ihq;
  | _ => exact iff_id!;

lemma S4_of_boxdotTranslatedK4 (h : ­Юљі­ЮЪњ Ріб! pрхЄ) : ­Юљњ­ЮЪњ Ріб! p := by
  exact (andРѓѓ'! iff_boxdotTranslation_S4) Ређ (weakerThan_iff.mp $ reducible_K4_S4) h

theorem iff_S4_boxdotTranslatedK4 : ­Юљњ­ЮЪњ Ріб! p Рєћ ­Юљі­ЮЪњ Ріб! pрхЄ := by
  constructor;
  . apply boxdotTranslatedK4_of_S4;
  . apply S4_of_boxdotTranslatedK4;

lemma boxdotTranslatedGL_of_Grz : ­Юљє­ЮљФ­Юљ│ Ріб! p Рєњ ­Юљє­ЮљІ Ріб! pрхЄ := boxdotTranslated $ by
  intro p hp;
  rcases hp with (РЪе_, _, rflРЪЕ | РЪе_, rflРЪЕ);
  . simp only [BoxdotTranslation.axiomK, boxdot_axiomK!];
  . simp only [BoxdotTranslation.axiomGrz, boxdot_Grz_of_L!];

end LO.Modal.Standard
